image: "rust:latest"

stages:
    - lint
    - test

lint:fmt:
    stage: lint
    before_script:
        - rustup component add rustfmt-preview
    script:
        - cargo fmt
        - if test $(git ls-files --modified | wc -l) -ne 0;
          then
              echo 'You have introduced some unformated code:';
              git ls-files --modified | sed 's/^/* /';
              echo 'Please run `cargo fmt` and amend your PR.';
              exit 1;
          fi

lint:clippy:
    stage: lint
    before_script:
        - rustup component add clippy
    script: cargo clippy -- --deny warnings

.test: &test
    stage: test
    before_script:
        - apt update -yqq
        - apt install -yqq --no-install-recommends graphviz
        - make MODE=$MODE
    script:
        - status=0;
            for plan in $(find examples/ -name '*.json');
            do
                cargo run -- --dry-run --file "$plan" --output "${plan/json/dot}" -;
                if test $(git ls-files --modified | wc -l) -ne 0;
                then
                    echo "$plan is not the same";
                    status=1;
                fi;
                dot -Tpng "${plan/json/dot}" > /dev/null;
            done;
            exit $status

test:debug:
    <<: *test
    variables:
        MODE: debug

test:release:
    <<: *test
    variables:
        MODE: release

cache:
    paths:
        - cargo/
        - target/
